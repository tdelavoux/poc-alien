var w=Object.defineProperty;var R=(r,e,t)=>e in r?w(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var L=(r,e,t)=>R(r,typeof e!="symbol"?e+"":e,t);class P{static stringToHtmlElement(e){const t=document.createElement("div");return t.innerHTML=e,t.firstChild}}let T=null;const N="alien-roll-request";function p(){if(T)return T;const r=`/modules/${N}/templates/`;return T={moduleId:N,templatePath:r},T}function A(){game.settings.register(N,"hostile",{name:"Hostile Tokens",hint:"Unable or disable hostile tokens",scope:"world",config:!0,type:Boolean,default:!1})}class g{constructor(e){if(this.token=e,!this.tokenIsValidActor())throw new Error("Token is not a suitable actor")}getSkill(e){var t,s,n,o,a;return(s=(t=this.token.actor)==null?void 0:t.system)!=null&&s.skills[e]||console.error(`Skill ${attributeName} not found`),((a=(o=(n=this.token.actor)==null?void 0:n.system)==null?void 0:o.skills[e])==null?void 0:a.value)??0}getAttribute(e){var t,s,n,o,a;return(s=(t=this.token.actor)==null?void 0:t.system)!=null&&s.attributes[e]||console.error(`Attribute ${e} not found`),((a=(o=(n=this.token.actor)==null?void 0:n.system)==null?void 0:o.attributes[e])==null?void 0:a.value)??0}getStressValue(){return this.token.actor.system.header.stress.value}getPanicValue(){var e,t,s,n,o,a;return((s=(t=(e=this.token.actor.system)==null?void 0:e.general)==null?void 0:t.panic)==null?void 0:s.value)===1?(a=(o=(n=this.token.actor.system)==null?void 0:n.general)==null?void 0:o.panic)==null?void 0:a.lastRoll:0}getLastPanicMessage(){return this.token.actor.morePanic(this.getPanicValue())}getId(){return this.token.id}getName(){return this.token.name}getActor(){return this.token.actor}getOwners(e=!1){var t;return(t=game==null?void 0:game.users)==null?void 0:t.filter(s=>s.character===this.token.actor&&(e?s.active:!0))}tokenIsValidActor(){return!!this.token&&!!this.token.actor}static getTokenFromId(e){const t=canvas.tokens.get(e);return new this(t)}static getTokenFromActorId(e){const t=canvas.tokens.placeables.find(s=>{var n;return((n=s.actor)==null?void 0:n.id)===e});return new this(t)}static getPlayersFromList(e){const t=p(),s=[CONST.TOKEN_DISPOSITIONS.FRIENDLY,game.settings.get(t.moduleId,"hostile")?CONST.TOKEN_DISPOSITIONS.HOSTILE:null].filter(Boolean);try{return e.filter(n=>{var o;return((o=n.actor)==null?void 0:o.type)==="character"&&s.includes(n.document.disposition)})}catch{return console.error("Not a suitable list of tokens"),{}}}}class h{static async create(e){await ChatMessage.create(e)}static deleteMessage(e,t=!1){!e||!e instanceof ChatMessage||(this.isUserMessageOwner(e)?h.deleteMessageFromDb(e):t&&game.socket.emit("module.alien-roll-request",{action:"delete-roll-request",messageId:e.id}))}static deleteMessageFromDb(e){!e||!this.isUserMessageOwner(e)||e==null||e.delete()}static cleanChatMessageByClassName(e="message"){document.querySelectorAll(`.chat-message:has(.${e})`).forEach(t=>{const s=ChatMessage.get(t.dataset.messageId);h.deleteMessage(s)})}static isUserMessageOwner(e){return!e||!e instanceof ChatMessage,e.testUserPermission(game.user,CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER)}static setMessageCreationListener(e){game.socket.on("module.alien-roll-request",t=>{if(t.action==="delete-roll-request"){const s=ChatMessage.get(t.messageId);h.deleteMessage(s)}}),Hooks.on("createChatMessage",t=>{var s,n,o,a;if(t.isRoll&&((o=(n=(s=t.rolls[0])==null?void 0:s.terms[0])==null?void 0:n.constructor)==null?void 0:o.name)==="AlienRPGBaseDie"){const l=P.stringToHtmlElement(t.content),i=g.getTokenFromActorId(l==null?void 0:l.dataset.actorId)??g.getTokenFromId((a=t.speaker)==null?void 0:a.token);setTimeout(()=>{t.update({speaker:{alias:i.getName()}})},100);const c=t.rolls[0];c&&i&&e.logRollResult(i,c)}Hooks.on("updateActor",(l,i,c,m)=>{var u,k;if((k=(u=i.system)==null?void 0:u.general)!=null&&k.panic){const d=g.getTokenFromActorId(l.id);e.syncPanic(d)}})})}static setCommonListeners(){Hooks.on("renderChatMessage",(e,t,s)=>{var n;(n=t.find(".rollable"))==null||n.on("click",o=>{var c;const l=o.currentTarget.dataset,i=g.getTokenFromId(l==null?void 0:l.token).token;(c=i==null?void 0:i.actor)==null||c.rollAbility(i==null?void 0:i.actor,l),h.deleteMessage(e,!0)})})}}const M="/systems/alienrpg/template.json";let E=null;async function I(){if(E)return E;const r=await S();return E={attributes:r.Actor.character.attributes,skills:r.Actor.character.skills},E}async function S(){const r=new URL(M,import.meta.url).href,e=await fetch(r);if(!e.ok)throw new Error(`Failed to load alien template.json: ${e.statusText}`);return await e.json()}const y=class y{constructor(e,t,s,n=!1){this.token=e,this.type=t,this.key=s,this.isPush=n,this.rollName="randomRoll",this.diceNumber=0,this.template="rollRequest.html"}async createRollNotification(e=[]){await this.determineDicesForRoll();const s=`${p().templatePath}${this.template}`,n=await renderTemplate(s,{tokenId:this.token.getId(),tokenName:this.token.getName(),label:this.rollName,number:this.diceNumber}),o={whisper:e,type:CONST.CHAT_MESSAGE_STYLES.OTHER,content:n};await h.create(o)}async determineDicesForRoll(){var t,s,n;const e=await I();switch(this.type){case y.RollTypeEnum.skill:const o=(t=e==null?void 0:e.skills[this.key])==null?void 0:t.ability;this.diceNumber=this.token.getSkill(this.key)+this.token.getAttribute(o),this.rollName=((s=e==null?void 0:e.skills[this.key])==null?void 0:s.label)??"undefined roll";break;case y.RollTypeEnum.attribute:this.diceNumber=this.token.getAttribute(this.key),this.rollName=((n=e==null?void 0:e.attributes[this.key])==null?void 0:n.label)??"undefined roll";break}}async characterRoll(){await this.determineDicesForRoll(),await game.alienrpg.yze.yzeRoll("character",!1,this.isPush,this.rollName,this.diceNumber,game.i18n.localize("ALIENRPG.Black"),this.token.getStressValue(),game.i18n.localize("ALIENRPG.Yellow"),this.token.getActor().id,"randomStringValue",1,null)}};L(y,"RollTypeEnum",{skill:"skill",attribute:"attribute"});let f=y;class O{static getDicesFromRoll(e){let t=0,s=0;return e==null||e.terms.forEach((n,o)=>{Array.isArray(n==null?void 0:n.results)&&(t+=n.results.filter(a=>a.result===6).length,s+=o!==0?n.results.filter(a=>a.result===1).length:0)}),{success:t,stress:s}}}class C{constructor(e){var t;if(!e){console.warn("Trigger is not a valid HTML element. Module cannot be set");return}this.trigger=e,this.rootNode=null,this.template="modale.html",this.templateRollLigne="roll-line.html",this.templatePanic="panic-line.html",(t=this.trigger)==null||t.addEventListener("click",()=>this.toggle())}async create(){const e=this,t=p(),s=await I(),n=`${t.templatePath}${this.template}`,o=g.getPlayersFromList(canvas.tokens.placeables),a=s.skills,l=s.attributes,i=await renderTemplate(n,{tokens:o,skills:a,attributes:l}),c=new Dialog({title:game.i18n.localize("DICEROLLREQUEST.MODALE.modaleTitle"),content:i,buttons:{},render:m=>{let u=m==null?void 0:m.closest(".dialog");if(!u.find(".header-button.minimize").length){let k=u==null?void 0:u.find(".window-header .close"),d=$(`<a class="header-button control minimize">${game.i18n.localize("DICEROLLREQUEST.MODALE.minimizeButton")}</a>`);d==null||d.on("click",()=>{var b;return(b=e.rootNode)==null?void 0:b.minimize()}),k.before(d)}e.applyFormListeners(m),this.syncPanic(...o)},close:()=>{e.rootNode=null}},{width:600});c.render(!0),e.rootNode=c}toggle(){if(!this.rootNode){this.create();return}this.rootNode.close()}async update(){var i;if(!this.rootNode)return;const e=p(),t=await I(),s=`${e.templatePath}${this.template}`,n=g.getPlayersFromList(canvas.tokens.placeables),o=t.skills,a=t.attributes,l=await renderTemplate(s,{tokens:n,skills:o,attributes:a});this.rootNode.data.content=l,(i=this.rootNode)==null||i.render(!0)}applyFormListeners(e){document.getElementById("arr-roll-button").addEventListener("click",()=>{this.formAction()}),e.find(".arr-attribute-input").on("change",function(){this.checked&&e.find(".arr-skill-input").prop("checked",!1)}),e.find(".arr-skill-input").on("change",function(){this.checked&&e.find(".arr-attribute-input").prop("checked",!1)}),document.getElementById("arr-cleanup-pending-requests").addEventListener("click",()=>{h.cleanChatMessageByClassName("alien-request-roll"),ui.notifications.warn(game.i18n.localize("DICEROLLREQUEST.MODALE.pendingNotificationsCleared"))}),document.getElementById("arr-update-modal-content").addEventListener("click",()=>{this.update()})}formAction(){var i,c;const e=Array.from(document.querySelectorAll(".arr-token-input:checked")).map(m=>m.value),t=document.querySelector(".arr-attribute-input:checked"),s=document.querySelector(".arr-skill-input:checked"),n=t?f.RollTypeEnum.attribute:f.RollTypeEnum.skill,o=t?t==null?void 0:t.value:s==null?void 0:s.value,a=(i=document.querySelector("#arr-roll-for-missing:checked"))==null?void 0:i.checked,l=(c=document.querySelector("#arr-force-for-present:checked"))==null?void 0:c.checked;if(e.length<1||!o){ui.notifications.warn(game.i18n.localize("DICEROLLREQUEST.MODALE.noElementSelectedNotification"));return}e.forEach(m=>{const u=g.getTokenFromId(m);if(!u)return;const k=new f(u,n,o),d=u.getOwners(!0);(d.length===0?a:l)?k.characterRoll():k.createRollNotification(d==null?void 0:d.map(b=>b.id))})}async logRollResult(e,t){const s=document.querySelector(`#arr-token-item-${e.getId()} .arr-last-roll-result`);if(!s)return;const o=`${p().templatePath}${this.templateRollLigne}`,a=O.getDicesFromRoll(t);s.innerHTML=await renderTemplate(o,{token:e.token,roll:a}),await this.syncPanic(e)}async syncPanic(...e){const t=p();[...e].forEach(async s=>{s=s instanceof g?s:g.getTokenFromId((s==null?void 0:s.id)??s);const n=document.querySelector(`#arr-token-item-${s.getId()} .arr-panic-state`);if(!n)return;const o={isPanic:s.getPanicValue(),panicMessage:s.getLastPanicMessage()},a=`${t.templatePath}${this.templatePanic}`,l=await renderTemplate(a,{token:s.token,panic:o});n.innerHTML=l})}}Hooks.once("ready",async()=>{if(p(),Handlebars.registerHelper("localizeByKey",function(r,e,t){return game.i18n.localize(`ALIENRPG.${r}${t?e.charAt(0).toUpperCase()+e.slice(1):e}`)}),game.user.isGM){const r=new C(document.querySelector("#chat-controls .chat-control-icon"));h.cleanChatMessageByClassName("alien-request-roll"),h.setMessageCreationListener(r),Hooks.on("createToken",e=>{r.update()}),Hooks.on("deleteToken",e=>{r.update()})}h.setCommonListeners()});Hooks.once("init",()=>{A()});
